Import('env')

protoc_out = env.Protoc(["../protos/helloworld.proto"],
                       PROTOC_CCOUT=env.pathObj.buildGenCCDir,
                       PROTOC_PYOUT=env.pathObj.buildGenPYDir,
                       PROTOC_JAVAOUT=env.pathObj.buildGenJavaDir,
                      )

protoc_c = []
for file in protoc_out:
  if '.cc' not in str(file):
    continue
  protoc_c.append(file)

libs = [
  'protobuf',
  'grpc++',
  #'grpc++_reflection',
  #'grpc++_unsecure',
  #'grpc++_cronet',
  'grpc',
  #'gflags',
  #'grpc_unsecure',
  #'grpc_cronet',
  'gpr',
  'z',
  'ssl',
  'cares',
  'crypto'
]

if env.archObj.isLinux:
  libs += [
    'pthread',
    #'dl',
  ]
else:
  libs += [
  'Advapi32',
  ]


env.Program(target='greeter_client',
            source=['helloworld/greeter_client.cc',
                    protoc_c],
            LIBS=libs,
           )

env.Program(target='greeter_server',
            source=['helloworld/greeter_server.cc',
                    protoc_c],
            LIBS=libs,
           )
'''
env.SharedLibrary(target='greeter_client_shared',
                  source=['helloworld/greeter_client2.cc',
                          protoc_c],
                  LIBS=libs,
                  )
'''